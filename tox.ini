# tox.ini file for Tox https://tox.wiki/en/latest/config.html

# To perform the same tests done in GitHub Actions by CI-CD but locally (i.e. before pushing), run $ tox --parallel

# At its core tox provides a convenient way to run arbitrary commands in isolated environments to serve as a single
# entry point for build, test and release activities.

# May be run in parallel:
# > tox -p

[tox]
requires =
    tox>=4.12.1
    virtualenv>=20.25.0
env_list =
    pre-commit
    py312-new-install
    py{312,311,310,39}-pytest
skip_missing_interpreters = true

[testenv]
# Settings defined here are automatically inherited by individual environments unless overridden
set_env =
    PRE_COMMIT_COLOR = always
    PYTEST_ADDOPTS = --color=yes
    PYTHONPATH = {toxinidir}
    PYTHONUTF8 = 1
    USERPROFILE = {env:TEMP}
parallel_show_output = true

[testenv:pre-commit]
# Settings defined in the top-level testenv section are automatically inherited if not overwritten
; temp_dir = {work_dir}/.tmp_pre-commit
base_python = python3.12
deps =
    -rtests/requirements_pre-commit.txt
temp_dir = {work_dir}/.tmp_pre-commit
skip_install = true
allowlist_externals =
    pre-commit
description = Run pre-commit
commands =
    pre-commit autoupdate
    pre-commit run -a

[testenv:new-install]
# Settings defined in the top-level testenv section are automatically inherited if not overwritten
# Empty values are to remove (override) top level
deps =
    build
description = Emulate a new installation using wheel, ensuring e.g. that all packages are installed
commands =
#    pip install --upgrade pip build wheel
    python -m build -w
    pip install --upgrade --find-links={toxinidir}\dist airportsdata

[testenv:pytest]
# Settings defined in the top-level testenv section are automatically inherited if not overwritten
deps =
    -rtests/requirements_testing.txt
description = Run tests
commands =
    pytest tests/ -v
